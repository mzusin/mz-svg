{
  "version": 3,
  "sources": ["../src/index-esm.ts", "../src/core.ts", "../src/shapes.ts"],
  "sourcesContent": ["export * from './core';\nexport * from './shapes';", "/**\n * SVG namespace that is defined in SVG v1.0 Specification\n * and subsequently added to by SVG 1.1, SVG 1.2 and SVG 2\n */\nexport const SVG_NAMESPACE= 'http://www.w3.org/2000/svg';\nexport const XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * Create new SVG element in browser or Node.js environment.\n * In case of Node.js, JSDom document can be provided.\n */\nexport const createSVG = (props: {\n    width: number;\n    height: number;\n    document?: Document;\n}) : SVGSVGElement => {\n\n    const {\n        width: _width,\n        height: _height,\n        document: _document,\n    } = props;\n\n    const doc = _document || window.document;\n    const $svg= doc.createElementNS(SVG_NAMESPACE, 'svg');\n\n    const width = Math.max(0, Number(_width) || 0);\n    const height = Math.max(0, Number(_height) || 0);\n\n    $svg.setAttributeNS(XMLNS_NAMESPACE, 'xmlns', SVG_NAMESPACE);\n    $svg.setAttribute('width', width.toString());\n    $svg.setAttribute('height', height.toString());\n    $svg.setAttribute('viewBox', `0 0 ${ width } ${ height }`);\n\n    return $svg;\n};\n\nexport const setAttributes = ($svgElement: SVGElement, attr: [string, string|number|undefined][]) => {\n    if(!$svgElement || !attr) return;\n\n    for(const pair of attr){\n        if(pair.length !== 2) continue;\n\n        const prop = pair[0];\n        if(prop === null || prop === undefined) continue;\n\n        const value = pair[1];\n        if(value === null || value === undefined) continue;\n\n        $svgElement.setAttribute(prop, value.toString());\n    }\n};", "import { setAttributes, SVG_NAMESPACE } from './core';\n\n/**\n * Create SVG path.\n */\nexport const createPath = (props: {\n    document?: Document;\n\n    id?: string;\n    classes?: string;\n    style?: string;\n\n    d?: string;\n    pathLength?: string|number;\n\n    stroke?: string;\n    strokeWidth?: number|string;\n    strokeOpacity?: number|string;\n    strokeLinecap?: string; // 'round'\n    strokeLinejoin?: string;\n    strokeDasharray?: string;\n    strokeDashoffset?: number|string;\n    strokeMiterlimit?: number|string;\n\n    fill?: string;\n    fillOpacity?: number|string;\n    fillRule?: string;\n\n    filter?: string;\n    mask?: string;\n    transform?: string;\n\n    vectorEffect?: string; // 'non-scaling-stroke' - used to disable line scale\n    shapeRendering?: string;\n\n    clipPath?: string;\n    clipRule?: string;\n\n    opacity?: string|number;\n    visibility?: string;\n\n}) : SVGPathElement => {\n\n    const {\n        document: _document,\n        d: _d,\n    } = props;\n\n    const doc = _document || window.document;\n\n    const $path = doc.createElementNS(SVG_NAMESPACE, 'path');\n\n    if(_d){\n        // remove newlines and double spaces\n        const d = _d.replace(/\\s\\s+/g, ' ');\n\n        $path.setAttribute('d', d);\n    }\n\n    setAttributes($path, [\n        ['id', props.id],\n        ['class', props.classes],\n        ['style', props.style],\n\n        ['d', _d],\n        ['pathLength', props.pathLength],\n\n        ['stroke', props.stroke],\n        ['stroke-width', props.strokeWidth],\n        ['stroke-opacity', props.strokeOpacity],\n        ['stroke-linecap', props.strokeLinecap],\n        ['stroke-linejoin', props.strokeLinejoin],\n        ['stroke-dasharray', props.strokeDasharray],\n        ['stroke-dashoffset', props.strokeDashoffset],\n        ['stroke-miterlimit', props.strokeMiterlimit],\n\n        ['fill', props.fill],\n        ['fill-opacity', props.fillOpacity],\n        ['fill-rule', props.fillRule],\n\n        ['filter', props.filter],\n        ['mask', props.mask],\n        ['transform', props.transform],\n\n        ['vector-effect', props.vectorEffect],\n        ['shape-rendering', props.shapeRendering],\n\n        ['clip-path', props.clipPath],\n        ['clip-rule', props.clipRule],\n\n        ['opacity', props.opacity],\n        ['visibility', props.visibility],\n    ]);\n\n    return $path;\n};\n\n/**\n * Create SVG rectangle.\n */\nexport const createRect = (props: {\n    document?: Document;\n    x?: number|string;\n    y?: number|string;\n    width?: number|string;\n    height: number|string;\n    stroke?: string;\n    strokeWidth?: number|string;\n    fill?: string;\n    rx?: number|string;\n    ry?: number|string;\n}) : SVGRectElement => {\n    const {\n        document: _document,\n        x, y, rx, ry,\n        width, height,\n        stroke, strokeWidth,\n        fill,\n    } = props;\n\n    const doc = _document || window.document;\n\n    const $rect = doc.createElementNS(SVG_NAMESPACE, 'rect');\n\n    setAttributes($rect, [\n        ['x', x],\n        ['y', y],\n        ['rx', rx],\n        ['ry', ry],\n        ['width', width],\n        ['height', height],\n        ['fill', fill],\n        ['stroke', stroke],\n        ['stroke-width', strokeWidth],\n    ]);\n\n    return $rect;\n};\n\n/**\n * Create SVG circle.\n */\nexport const createCircle = (props: {\n    document?: Document;\n    cx?: string|number;\n    cy?: string|number;\n    r?: string|number;\n    stroke?: string;\n    strokeWidth?: string|number;\n    fill?: string;\n}) : SVGCircleElement => {\n    const {\n        document: _document,\n        cx, cy, r,\n        stroke, strokeWidth, fill,\n    } = props;\n\n    const doc = _document || window.document;\n\n    const $circle = doc.createElementNS(SVG_NAMESPACE, 'circle');\n\n    setAttributes($circle, [\n        ['cx', cx],\n        ['cy', cy],\n        ['r', r],\n        ['fill', fill],\n        ['stroke', stroke],\n        ['stroke-width', strokeWidth],\n    ]);\n\n    return $circle;\n};\n\n/**\n * Create SVG ellipse.\n */\nexport const createEllipse = (props: {\n    document?: Document;\n    cx?: string|number;\n    cy?: string|number;\n    rx?: string|number;\n    ry?: string|number;\n    stroke?: string;\n    strokeWidth?: string|number;\n    fill?: string;\n}) : SVGEllipseElement => {\n    const {\n        document: _document,\n        cx, cy, rx, ry,\n        stroke, strokeWidth, fill,\n    } = props;\n\n    const doc = _document || window.document;\n\n    const $ellipse = doc.createElementNS(SVG_NAMESPACE, 'ellipse');\n\n    setAttributes($ellipse, [\n        ['cx', cx],\n        ['cy', cy],\n        ['rx', rx],\n        ['ry', ry],\n        ['fill', fill],\n        ['stroke', stroke],\n        ['stroke-width', strokeWidth],\n    ]);\n\n    return $ellipse;\n};\n\n/**\n * Create SVG line.\n */\nexport const createLine = (props: {\n    document?: Document;\n    x1?: string|number;\n    y1?: string|number;\n    x2?: string|number;\n    y2?: string|number;\n    stroke?: string;\n    strokeWidth?: string|number;\n    strokeLinecap?: string; // 'round'\n    strokeLinejoin?: string;\n}) : SVGLineElement => {\n    const {\n        document: _document,\n        x1, y1, x2, y2,\n        stroke, strokeWidth,\n        strokeLinecap, strokeLinejoin\n    } = props;\n\n    const doc = _document || window.document;\n\n    const $line = doc.createElementNS(SVG_NAMESPACE, 'line');\n\n    setAttributes($line, [\n        ['x1', x1],\n        ['x2', x2],\n        ['y1', y1],\n        ['y2', y2],\n        ['stroke', stroke],\n        ['stroke-width', strokeWidth],\n        ['stroke-linecap', strokeLinecap],\n        ['stroke-linejoin', strokeLinejoin],\n    ]);\n\n    return $line;\n};\n"],
  "mappings": "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",
  "names": ["index_esm_exports", "__export", "SVG_NAMESPACE", "XMLNS_NAMESPACE", "createCircle", "createEllipse", "createLine", "createPath", "createRect", "createSVG", "setAttributes", "__toCommonJS", "SVG_NAMESPACE", "XMLNS_NAMESPACE", "createSVG", "props", "_width", "_height", "_document", "$svg", "width", "height", "setAttributes", "$svgElement", "attr", "pair", "prop", "value", "createPath", "props", "_document", "_d", "$path", "SVG_NAMESPACE", "d", "setAttributes", "createRect", "x", "y", "rx", "ry", "width", "height", "stroke", "strokeWidth", "fill", "$rect", "createCircle", "cx", "cy", "$circle", "createEllipse", "$ellipse", "createLine", "x1", "y1", "x2", "y2", "strokeLinecap", "strokeLinejoin", "$line"]
}
