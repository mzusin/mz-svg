/* 
mzSVG - the TypeScript-based library for manipulating and animating SVG.
Version: 1.0.0
Author: Miriam Zusin     
Contact: miriam.zusin@gmail.com
Documentation: https://github.com/mzusin/mz-svg
Licensed GPLv3 for open source use, or Commercial License for commercial use - https://github.com/mzusin/index/blob/main/LICENSE.md                 
*/
(()=>{var O=Object.defineProperty,j=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var G=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty,_=Object.prototype.propertyIsEnumerable;var M=(t,e,i)=>e in t?O(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,f=(t,e)=>{for(var i in e||(e={}))A.call(e,i)&&M(t,i,e[i]);if(G)for(var i of G(e))_.call(e,i)&&M(t,i,e[i]);return t},$=(t,e)=>j(t,N(e));var y=(t,e)=>{for(var i in e)O(t,i,{get:e[i],enumerable:!0})};var L={};y(L,{SVG_NAMESPACE:()=>g,XMLNS_NAMESPACE:()=>P,createSVG:()=>U,createSVGFromString:()=>v,getSVGAsString:()=>S,setAttributes:()=>h});var g="http://www.w3.org/2000/svg",P="http://www.w3.org/2000/xmlns/",U=t=>{let{width:e,height:i,document:r}=t,s=(r||window.document).createElementNS(g,"svg"),a=Math.max(0,Number(e)||0),o=Math.max(0,Number(i)||0);return s.setAttributeNS(P,"xmlns",g),s.setAttribute("width",a.toString()),s.setAttribute("height",o.toString()),s.setAttribute("viewBox",`0 0 ${a} ${o}`),s},v=t=>{let{document:e,svg:i}=t,n=(e||window.document).createElement("div");return n.innerHTML=i,n.firstElementChild},S=t=>t.outerHTML,h=(t,e)=>{if(!(!t||!e))for(let i of e){if(i.length!==2)continue;let r=i[0];if(r==null)continue;let n=i[1];n!=null&&t.setAttribute(r,n.toString())}};var R={};y(R,{createCircle:()=>C,createEllipse:()=>I,createLine:()=>z,createPath:()=>w,createRect:()=>W});var w=t=>{let{document:e,d:i}=t,n=(e||window.document).createElementNS(g,"path");if(i){let s=i.replace(/\s\s+/g," ");n.setAttribute("d",s)}return h(n,[["id",t.id],["class",t.classes],["style",t.style],["d",i],["pathLength",t.pathLength],["stroke",t.stroke],["stroke-width",t.strokeWidth],["stroke-opacity",t.strokeOpacity],["stroke-linecap",t.strokeLinecap],["stroke-linejoin",t.strokeLinejoin],["stroke-dasharray",t.strokeDasharray],["stroke-dashoffset",t.strokeDashoffset],["stroke-miterlimit",t.strokeMiterlimit],["fill",t.fill],["fill-opacity",t.fillOpacity],["fill-rule",t.fillRule],["filter",t.filter],["mask",t.mask],["transform",t.transform],["vector-effect",t.vectorEffect],["shape-rendering",t.shapeRendering],["clip-path",t.clipPath],["clip-rule",t.clipRule],["opacity",t.opacity],["visibility",t.visibility]]),n},W=t=>{let{document:e}=t,r=(e||window.document).createElementNS(g,"rect");return h(r,[["x",t.x],["y",t.y],["rx",t.rx],["ry",t.ry],["width",t.width],["height",t.height],["id",t.id],["class",t.classes],["style",t.style],["pathLength",t.pathLength],["stroke",t.stroke],["stroke-width",t.strokeWidth],["stroke-opacity",t.strokeOpacity],["stroke-linecap",t.strokeLinecap],["stroke-linejoin",t.strokeLinejoin],["stroke-dasharray",t.strokeDasharray],["stroke-dashoffset",t.strokeDashoffset],["stroke-miterlimit",t.strokeMiterlimit],["fill",t.fill],["fill-opacity",t.fillOpacity],["fill-rule",t.fillRule],["filter",t.filter],["mask",t.mask],["transform",t.transform],["vector-effect",t.vectorEffect],["shape-rendering",t.shapeRendering],["clip-path",t.clipPath],["clip-rule",t.clipRule],["opacity",t.opacity],["visibility",t.visibility]]),r},C=t=>{let{document:e}=t,r=(e||window.document).createElementNS(g,"circle");return h(r,[["cx",t.cx],["cy",t.cy],["r",t.r],["id",t.id],["class",t.classes],["style",t.style],["pathLength",t.pathLength],["stroke",t.stroke],["stroke-width",t.strokeWidth],["stroke-opacity",t.strokeOpacity],["stroke-linecap",t.strokeLinecap],["stroke-linejoin",t.strokeLinejoin],["stroke-dasharray",t.strokeDasharray],["stroke-dashoffset",t.strokeDashoffset],["stroke-miterlimit",t.strokeMiterlimit],["fill",t.fill],["fill-opacity",t.fillOpacity],["fill-rule",t.fillRule],["filter",t.filter],["mask",t.mask],["transform",t.transform],["vector-effect",t.vectorEffect],["shape-rendering",t.shapeRendering],["clip-path",t.clipPath],["clip-rule",t.clipRule],["opacity",t.opacity],["visibility",t.visibility]]),r},I=t=>{let{document:e}=t,r=(e||window.document).createElementNS(g,"ellipse");return h(r,[["cx",t.cx],["cy",t.cy],["rx",t.rx],["ry",t.ry],["id",t.id],["class",t.classes],["style",t.style],["pathLength",t.pathLength],["stroke",t.stroke],["stroke-width",t.strokeWidth],["stroke-opacity",t.strokeOpacity],["stroke-linecap",t.strokeLinecap],["stroke-linejoin",t.strokeLinejoin],["stroke-dasharray",t.strokeDasharray],["stroke-dashoffset",t.strokeDashoffset],["stroke-miterlimit",t.strokeMiterlimit],["fill",t.fill],["fill-opacity",t.fillOpacity],["fill-rule",t.fillRule],["filter",t.filter],["mask",t.mask],["transform",t.transform],["vector-effect",t.vectorEffect],["shape-rendering",t.shapeRendering],["clip-path",t.clipPath],["clip-rule",t.clipRule],["opacity",t.opacity],["visibility",t.visibility]]),r},z=t=>{let{document:e}=t,r=(e||window.document).createElementNS(g,"line");return h(r,[["x1",t.x1],["x2",t.x2],["y1",t.y1],["y2",t.y2],["id",t.id],["class",t.classes],["style",t.style],["pathLength",t.pathLength],["stroke",t.stroke],["stroke-width",t.strokeWidth],["stroke-opacity",t.strokeOpacity],["stroke-linecap",t.strokeLinecap],["stroke-linejoin",t.strokeLinejoin],["stroke-dasharray",t.strokeDasharray],["stroke-dashoffset",t.strokeDashoffset],["stroke-miterlimit",t.strokeMiterlimit],["fill",t.fill],["fill-opacity",t.fillOpacity],["fill-rule",t.fillRule],["filter",t.filter],["mask",t.mask],["transform",t.transform],["vector-effect",t.vectorEffect],["shape-rendering",t.shapeRendering],["clip-path",t.clipPath],["clip-rule",t.clipRule],["opacity",t.opacity],["visibility",t.visibility]]),r};var E={};y(E,{createStar:()=>B});var B=t=>{let{raysNumber:e,centerX:i,centerY:r,outerRadius:n,innerRadius:s}=t,a=[],o=2*Math.PI/e,c=o/2;for(let u=0,m=1.5*Math.PI;u<e;u++,m+=o)a.push([i+Math.cos(m)*n,r+Math.sin(m)*n]),a.push([i+Math.cos(m+c)*s,r+Math.sin(m+c)*s]);let l=`M ${a[0][0]},${a[0][1]} `;l+=a.map(u=>` L ${u[0]},${u[1]} `),l+="Z";let b=$(f({},t),{d:l});return w(b)};var x={};y(x,{download:()=>X});var F="Either an SVG element or an SVG string must be provided.",T=t=>!t||!t.trim()?"svg":t.trim().toLowerCase(),X=t=>new Promise((e,i)=>{if(!t.$svg&&!t.svgString){i({isError:!0,msg:F});return}let n=`<?xml version="1.0" encoding="UTF-8"?>${t.$svg?S(t.$svg):t.svgString}`,s=T(t.ext),a=`${t.outfileName||"out"}.${s}`;if(s==="svg"){let o=new Blob([n],{type:"text/plain"}),c=URL.createObjectURL(o),l=document.createElement("a");l.href=c,l.title="",l.download=a,l.click(),URL.revokeObjectURL(c),e({isError:!1})}else{let o=t.$svg||v({svg:t.svgString||""}),c=document.createElement("canvas");c.width=o.width.baseVal.value,c.height=o.height.baseVal.value;let l=c.getContext("2d");if(!l){i({isError:!0});return}let b=new XMLSerializer().serializeToString(o),u=new Blob([b],{type:"image/svg+xml;charset=utf-8"}),m=URL.createObjectURL(u),d=new Image;d.onload=()=>{l.clearRect(0,0,c.width,c.height),l.drawImage(d,0,0),URL.revokeObjectURL(m),c.toBlob(V=>{if(!V){e({isError:!0});return}let D=URL.createObjectURL(V),k=document.createElement("a");k.href=D,k.title="",k.download=a,k.click(),URL.revokeObjectURL(D),e({isError:!1})})},d.onerror=()=>{e({isError:!0})},d.src=m}});var H=f(f(f(f({},L),R),x),E);window.mzSVG=window.mzSVG||H;})();
//# sourceMappingURL=mz-svg.min.js.map
