{
  "version": 3,
  "sources": ["../src/core.ts", "../src/shapes.ts"],
  "sourcesContent": ["/**\n * SVG namespace that is defined in SVG v1.0 Specification\n * and subsequently added to by SVG 1.1, SVG 1.2 and SVG 2\n */\nexport const SVG_NAMESPACE= 'http://www.w3.org/2000/svg';\nexport const XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * Create new SVG element in browser or Node.js environment.\n * In case of Node.js, JSDom document can be provided.\n */\nexport const createSVG = (props: {\n    width: number;\n    height: number;\n    document?: Document;\n}) : SVGSVGElement => {\n\n    const {\n        width: _width,\n        height: _height,\n        document: _document,\n    } = props;\n\n    const doc = _document || window.document;\n    const $svg= doc.createElementNS(SVG_NAMESPACE, 'svg');\n\n    const width = Math.max(0, Number(_width) || 0);\n    const height = Math.max(0, Number(_height) || 0);\n\n    $svg.setAttributeNS(XMLNS_NAMESPACE, 'xmlns', SVG_NAMESPACE);\n    $svg.setAttribute('width', width.toString());\n    $svg.setAttribute('height', height.toString());\n    $svg.setAttribute('viewBox', `0 0 ${ width } ${ height }`);\n\n    return $svg;\n};", "import { SVG_NAMESPACE } from './core';\n\n/**\n * Create SVG path.\n */\nexport const createPath = (props: {\n    document?: Document;\n    d?: string;\n    stroke?: string;\n    strokeWidth?: number;\n    fill?: string;\n    strokeLinecap?: string; // 'round'\n    strokeLinejoin?: string;\n    vectorEffect?: string; // 'non-scaling-stroke' - used to disable line scale\n}) : SVGPathElement => {\n\n    const {\n        document: _document,\n        d: _d,\n        stroke,\n        strokeWidth,\n        fill,\n        strokeLinecap,\n        strokeLinejoin,\n        vectorEffect,\n    } = props;\n\n    const doc = _document || window.document;\n\n    const $path = doc.createElementNS(SVG_NAMESPACE, 'path');\n\n    if(_d){\n        // remove newlines and double spaces\n        const d = _d.replace(/\\s\\s+/g, ' ');\n\n        $path.setAttribute('d', d);\n\n    }\n\n    if(fill){\n        $path.setAttribute('fill', fill);\n    }\n\n    if(stroke){\n        $path.setAttribute('stroke', stroke);\n    }\n\n    if(strokeWidth) {\n        $path.setAttribute('stroke-width', strokeWidth.toString());\n    }\n\n    if(strokeLinecap){\n        $path.setAttribute('stroke-linecap', strokeLinecap);\n    }\n\n    if(strokeLinejoin){\n        $path.setAttribute('stroke-linejoin', strokeLinejoin);\n    }\n\n    if(vectorEffect) {\n        $path.setAttribute('vector-effect', vectorEffect);\n    }\n\n    return $path;\n};\n\n/**\n * Create SVG rectangle.\n\nexport const createRect = (props: {\n    document?: Document;\n}) => {\n    const {\n        document: _document,\n    } = props;\n\n    const doc = _document || window.document;\n}; */\n\n/**\n * Create SVG circle.\n\nexport const createCircle = (props: {\n    document?: Document;\n}) => {\n    const {\n        document: _document,\n    } = props;\n\n    const doc = _document || window.document;\n}; */\n\n/**\n * Create SVG ellipse.\n\nexport const createEllipse = (props: {\n    document?: Document;\n}) => {\n    const {\n        document: _document,\n    } = props;\n\n    const doc = _document || window.document;\n}; */\n\n/**\n * Create SVG line.\n\nexport const createLine = (props: {\n    document?: Document;\n}) => {\n    const {\n        document: _document,\n    } = props;\n\n    const doc = _document || window.document;\n}; */\n\n/**\n * Create SVG parabola.\n\nexport const createParabola = (props: {\n    document?: Document;\n}) => {\n    const {\n        document: _document,\n    } = props;\n\n    const doc = _document || window.document;\n}; */"],
  "mappings": ";;;;;;;;AAIO,IAAMA,EAAe,6BACfC,EAAkB,gCAMlBC,EAAaC,GAIJ,CAElB,GAAM,CACF,MAAOC,EACP,OAAQC,EACR,SAAUC,CACd,EAAIH,EAGEI,GADMD,GAAa,OAAO,UAChB,gBAAgBN,EAAe,KAAK,EAE9CQ,EAAQ,KAAK,IAAI,EAAG,OAAOJ,CAAM,GAAK,CAAC,EACvCK,EAAS,KAAK,IAAI,EAAG,OAAOJ,CAAO,GAAK,CAAC,EAE/C,OAAAE,EAAK,eAAeN,EAAiB,QAASD,CAAa,EAC3DO,EAAK,aAAa,QAASC,EAAM,SAAS,CAAC,EAC3CD,EAAK,aAAa,SAAUE,EAAO,SAAS,CAAC,EAC7CF,EAAK,aAAa,UAAW,OAAQC,KAAWC,GAAS,EAElDF,CACX,EC9BO,IAAMG,EAAcC,GASJ,CAEnB,GAAM,CACF,SAAUC,EACV,EAAGC,EACH,OAAAC,EACA,YAAAC,EACA,KAAAC,EACA,cAAAC,EACA,eAAAC,EACA,aAAAC,CACJ,EAAIR,EAIES,GAFMR,GAAa,OAAO,UAEd,gBAAgBS,EAAe,MAAM,EAEvD,GAAGR,EAAG,CAEF,IAAMS,EAAIT,EAAG,QAAQ,SAAU,GAAG,EAElCO,EAAM,aAAa,IAAKE,CAAC,EAI7B,OAAGN,GACCI,EAAM,aAAa,OAAQJ,CAAI,EAGhCF,GACCM,EAAM,aAAa,SAAUN,CAAM,EAGpCC,GACCK,EAAM,aAAa,eAAgBL,EAAY,SAAS,CAAC,EAG1DE,GACCG,EAAM,aAAa,iBAAkBH,CAAa,EAGnDC,GACCE,EAAM,aAAa,kBAAmBF,CAAc,EAGrDC,GACCC,EAAM,aAAa,gBAAiBD,CAAY,EAG7CC,CACX",
  "names": ["SVG_NAMESPACE", "XMLNS_NAMESPACE", "createSVG", "props", "_width", "_height", "_document", "$svg", "width", "height", "createPath", "props", "_document", "_d", "stroke", "strokeWidth", "fill", "strokeLinecap", "strokeLinejoin", "vectorEffect", "$path", "SVG_NAMESPACE", "d"]
}
